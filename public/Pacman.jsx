/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 pacman.gltf 
Author: Luall_Studio (https://sketchfab.com/luall_studio)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/pacman-animated-e5e8dfb614da4fa69182f252fa4274a8
Title: Pacman animated
*/

import React, { useEffect } from 'react';
import { useGraph } from '@react-three/fiber';
import { useGLTF, useAnimations } from '@react-three/drei';
import { SkeletonUtils } from 'three-stdlib';

const Pacman = (props) => {
  const group = React.useRef();
  const { scene, animations } = useGLTF('/pacman.gltf');
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    if (actions && animations.length > 0) {
      actions[animations[0].name]?.play();
    }
  }, [actions, animations]);

  return (
    <group ref={group} {...props} dispose={null}>
      <lOD>
        <group name="Sketchfab_Scene">
          <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
            <group
              name="b6d5103afa454127a46ff4e177a0541ffbx"
              rotation={[Math.PI / 2, 0, 0]}
            >
              <group name="Object_2">
                <group name="RootNode">
                  <group
                    name="Pac_man002"
                    rotation={[Math.PI, 0, Math.PI]}
                    scale={100}
                  />
                  <group
                    name="Arma����o"
                    rotation={[-Math.PI / 2, 0, 0]}
                    scale={100}
                  >
                    <group name="Object_6">
                      <primitive object={nodes._rootJoint} />
                      <group
                        name="Object_8"
                        rotation={[Math.PI, 0, Math.PI]}
                        scale={100}
                      />
                      <skinnedMesh
                        name="Object_9"
                        geometry={nodes.Object_9.geometry}
                        material={materials.Pacman}
                        skeleton={nodes.Object_9.skeleton}
                      />
                      <skinnedMesh
                        name="Object_10"
                        geometry={nodes.Object_10.geometry}
                        material={materials.Negro}
                        skeleton={nodes.Object_10.skeleton}
                      />
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </lOD>
    </group>
  );
};

useGLTF.preload('/pacman.gltf');

export default Pacman;
