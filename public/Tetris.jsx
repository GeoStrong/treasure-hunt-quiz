/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 tetris.gltf 
Author: Okada (https://sketchfab.com/ToxicMind)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/tetris-animation-32168c9878144bcb8ddac0930c134035
Title: Tetris Animation
*/

import React, { useEffect } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';

const Tetris = (props) => {
  const group = React.useRef();
  const { nodes, materials, animations } = useGLTF('/tetris.gltf');
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    if (actions && animations.length > 0) {
      actions[animations[0].name]?.play();
    }
  }, [actions, animations]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group
            name="208dd7710cb34512a0f056bcf9235acdfbx"
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.001}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group
                  name="pCube8"
                  position={[-30, 45, 0]}
                  rotation={[0, 0, Math.PI / 2]}
                  scale={10}
                >
                  <mesh
                    name="pCube8_Flipped_Z_0"
                    geometry={nodes.pCube8_Flipped_Z_0.geometry}
                    material={materials.Flipped_Z}
                  />
                </group>
                <group name="pCube10" position={[35, 120, 0]} scale={10}>
                  <mesh
                    name="pCube10_Straight_0"
                    geometry={nodes.pCube10_Straight_0.geometry}
                    material={materials.Straight}
                  />
                </group>
                <group name="pCube1" position={[54.557, 10, -80]} scale={10}>
                  <mesh
                    name="pCube1_L_0"
                    geometry={nodes.pCube1_L_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group name="pCube2" position={[24.557, 10, -80]} scale={10}>
                  <mesh
                    name="pCube2_T_0"
                    geometry={nodes.pCube2_T_0.geometry}
                    material={materials.material_1}
                  />
                </group>
                <group name="pCube4" scale={10}>
                  <mesh
                    name="pCube4_lambert8_0"
                    geometry={nodes.pCube4_lambert8_0.geometry}
                    material={materials.lambert8}
                  />
                </group>
                <group name="pCube5" position={[-70.443, 30, -80]} scale={10}>
                  <mesh
                    name="pCube5_Square_0"
                    geometry={nodes.pCube5_Square_0.geometry}
                    material={materials.Square}
                  />
                </group>
                <group name="pCube6" position={[-65.443, 20, -80]} scale={10}>
                  <mesh
                    name="pCube6_Straight_0"
                    geometry={nodes.pCube6_Straight_0.geometry}
                    material={materials.Straight}
                  />
                </group>
                <group name="pCube7" position={[39.557, 20, -80]} scale={10}>
                  <mesh
                    name="pCube7_Flipped_L_0"
                    geometry={nodes.pCube7_Flipped_L_0.geometry}
                    material={materials.Flipped_L}
                  />
                </group>
                <group name="pCube9" position={[-25, 10, -80]} scale={10}>
                  <mesh
                    name="pCube9_Z_0"
                    geometry={nodes.pCube9_Z_0.geometry}
                    material={materials.material_7}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
};

useGLTF.preload('/tetris.gltf');

export default Tetris;
